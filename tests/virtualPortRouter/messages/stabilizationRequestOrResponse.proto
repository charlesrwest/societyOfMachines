import "messageContainer.proto";
import "commonEnums.proto";
import "chordNodeContactInformation.proto";

//This message is used to ask for the predecessor of a node (and its contact details
//When this message is used as a request, it is sent without predecessorContactInfo
//When this message is used for a response, it is sent with predecessorContactInfo

message stabilizationRequestOrResponse
{
required chordNodeContactInformation sender_contact_info = 1;  //The contact information of the sender of the request or response
optional chordNodeContactInformation predecessor_contact_info = 2; //The contact info/chordID of the node's predecessor

//Add to message container to allow simulated polymorphism
extend messageContainer
{
optional stabilizationRequestOrResponse aStabilizationRequestOrResponse = 17;
}
}
