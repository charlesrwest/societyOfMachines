import "messageContainer.proto";
import "commonEnums.proto";
import "chordNodeContactInformation.proto";

//The node responsible for a particular address space can be found iteratively asking the closest known node for the closest node it knows of until the answer is the node that is being asked (the closest predecessor it knows of is itself).  The node responsible for that address can then be found by getting the successor of the closest predecessor


message closestPredecessorRequestResponse
{
optional chordNodeContactInformation responder_successor_contact_info = 3; //A 512 bit chord ID, identifying the successor of the responder
optional chordNodeContactInformation closest_predecessor_contact_info = 4; //A 512 bit chord ID

//Add to message container to allow simulated polymorphism
extend messageContainer
{
optional closestPredecessorRequestResponse aClosestPredecessorRequestResponse = 16;
}
}
